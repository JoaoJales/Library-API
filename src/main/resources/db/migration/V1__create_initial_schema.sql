CREATE TABLE users (
    id BIGINT PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    phone VARCHAR(20),
    user_type VARCHAR(100) NOT NULL,
    street VARCHAR(100) NOT NULL,
    district VARCHAR(100) NOT NULL,
    postal_code VARCHAR(20) NOT NULL,
    city VARCHAR(100) NOT NULL,
    state VARCHAR(10) NOT NULL,
    house_number VARCHAR(20),
    complement VARCHAR(100)

);

CREATE TABLE authors(
    id BIGINT PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(100) NOT NULL,
    nationality VARCHAR(100) NOT NULL,
    birth_date DATE NOT NULL
);

CREATE TABLE books(
    id BIGINT PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    title VARCHAR(255) NOT NULL,
    publication_year INTEGER NOT NULL,
    publisher VARCHAR(150) NOT NULL,
    genre VARCHAR(100) NOT NULL,
    isbn VARCHAR(20) NOT NULL UNIQUE,
    author_id BIGINT NOT NULL,

    CONSTRAINT fk_book_author FOREIGN KEY (author_id) REFERENCES authors (id)
);

CREATE TABLE book_copies(
    id BIGINT PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    book_id BIGINT NOT NULL,
    inventory_code VARCHAR(255) NOT NULL UNIQUE,
    available BOOLEAN NOT NULL DEFAULT TRUE,

    CONSTRAINT fk_book_copies_book FOREIGN KEY (book_id) REFERENCES books (id)
);

CREATE TABLE loans (
    id BIGINT PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    user_id BIGINT NOT NULL,
    book_copy_id BIGINT NOT NULL,
    loan_date DATE NOT NULL,
    due_date DATE NOT NULL,
    return_date DATE DEFAULT NULL,
    loan_status VARCHAR (30) NOT NULL,

    CONSTRAINT fk_loan_user FOREIGN KEY (user_id) REFERENCES users (id),
    CONSTRAINT fk_loan_book_copy FOREIGN KEY (book_copy_id) REFERENCES book_copies (id)
);


CREATE TABLE fines (
    id BIGINT PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    loan_id BIGINT NOT NULL,
    amount DECIMAL(10, 2) NOT NULL,
    issued_date DATE NOT NULL,
    paid BOOLEAN NOT NULL DEFAULT FALSE,

    CONSTRAINT fk_fine_loan FOREIGN KEY (loan_id) REFERENCES loans (id)
);